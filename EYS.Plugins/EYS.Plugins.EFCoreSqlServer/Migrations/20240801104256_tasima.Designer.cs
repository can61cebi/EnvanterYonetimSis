// <auto-generated />
using System;
using EYS.Plugins.EFCoreSqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EYS.Plugins.EFCoreSqlServer.Migrations
{
    [DbContext(typeof(EYSIcerik))]
    [Migration("20240801104256_tasima")]
    partial class tasima
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EYS.CoreBusiness.Envanter", b =>
                {
                    b.Property<int>("EnvanterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnvanterId"));

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<string>("EnvanterIsim")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.HasKey("EnvanterId");

                    b.ToTable("Envanterler");

                    b.HasData(
                        new
                        {
                            EnvanterId = 1,
                            Adet = 17,
                            EnvanterIsim = "Ekran Kartı",
                            Fiyat = 12000.0
                        },
                        new
                        {
                            EnvanterId = 2,
                            Adet = 16,
                            EnvanterIsim = "İşlemci",
                            Fiyat = 6000.0
                        },
                        new
                        {
                            EnvanterId = 3,
                            Adet = 16,
                            EnvanterIsim = "Anakart",
                            Fiyat = 4000.0
                        },
                        new
                        {
                            EnvanterId = 4,
                            Adet = 32,
                            EnvanterIsim = "Rastgele Erişim Bellek",
                            Fiyat = 600.0
                        },
                        new
                        {
                            EnvanterId = 5,
                            Adet = 16,
                            EnvanterIsim = "Güç Kaynağı",
                            Fiyat = 2000.0
                        },
                        new
                        {
                            EnvanterId = 6,
                            Adet = 20,
                            EnvanterIsim = "Katı Hal Sürücüsü",
                            Fiyat = 2000.0
                        },
                        new
                        {
                            EnvanterId = 7,
                            Adet = 28,
                            EnvanterIsim = "Monitör",
                            Fiyat = 13000.0
                        },
                        new
                        {
                            EnvanterId = 8,
                            Adet = 30,
                            EnvanterIsim = "Klavye",
                            Fiyat = 1100.0
                        },
                        new
                        {
                            EnvanterId = 9,
                            Adet = 28,
                            EnvanterIsim = "Fare",
                            Fiyat = 750.0
                        },
                        new
                        {
                            EnvanterId = 10,
                            Adet = 17,
                            EnvanterIsim = "Kulaklık",
                            Fiyat = 1600.0
                        },
                        new
                        {
                            EnvanterId = 11,
                            Adet = 20,
                            EnvanterIsim = "Masa",
                            Fiyat = 11000.0
                        },
                        new
                        {
                            EnvanterId = 12,
                            Adet = 20,
                            EnvanterIsim = "Koltuk",
                            Fiyat = 6800.0
                        },
                        new
                        {
                            EnvanterId = 13,
                            Adet = 20,
                            EnvanterIsim = "Raf",
                            Fiyat = 780.0
                        },
                        new
                        {
                            EnvanterId = 14,
                            Adet = 50,
                            EnvanterIsim = "Priz",
                            Fiyat = 200.0
                        },
                        new
                        {
                            EnvanterId = 15,
                            Adet = 60,
                            EnvanterIsim = "Kalem",
                            Fiyat = 50.0
                        },
                        new
                        {
                            EnvanterId = 16,
                            Adet = 2000,
                            EnvanterIsim = "Kağıt",
                            Fiyat = 10.0
                        });
                });

            modelBuilder.Entity("EYS.CoreBusiness.EnvanterIslem", b =>
                {
                    b.Property<int>("EnvanterIslemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnvanterIslemId"));

                    b.Property<double>("AdetFiyati")
                        .HasColumnType("float");

                    b.Property<int>("AksiyonTipi")
                        .HasColumnType("int");

                    b.Property<string>("AlanKisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnvanterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IslemZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("OncekiAdet")
                        .HasColumnType("int");

                    b.Property<int>("SonrakiAdet")
                        .HasColumnType("int");

                    b.Property<string>("UretimNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("almaSayisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnvanterIslemId");

                    b.HasIndex("EnvanterId");

                    b.ToTable("EnvanterIslemleri");
                });

            modelBuilder.Entity("EYS.CoreBusiness.Urun", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunId"));

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("UrunIsim")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)");

                    b.HasKey("UrunId");

                    b.ToTable("Urunler");

                    b.HasData(
                        new
                        {
                            UrunId = 1,
                            Adet = 16,
                            Fiyat = 26600.0,
                            UrunIsim = "Masaüstü Bilgisayar"
                        },
                        new
                        {
                            UrunId = 2,
                            Adet = 17,
                            Fiyat = 14850.0,
                            UrunIsim = "Çevre Bileşenleri"
                        },
                        new
                        {
                            UrunId = 3,
                            Adet = 20,
                            Fiyat = 18840.0,
                            UrunIsim = "Ofis Mobilyaları"
                        });
                });

            modelBuilder.Entity("EYS.CoreBusiness.UrunEnvanter", b =>
                {
                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<int>("EnvanterId")
                        .HasColumnType("int");

                    b.Property<int>("EnvanterAdeti")
                        .HasColumnType("int");

                    b.HasKey("UrunId", "EnvanterId");

                    b.HasIndex("EnvanterId");

                    b.ToTable("UrunEnvanterleri");

                    b.HasData(
                        new
                        {
                            UrunId = 1,
                            EnvanterId = 1,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 1,
                            EnvanterId = 2,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 1,
                            EnvanterId = 3,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 1,
                            EnvanterId = 4,
                            EnvanterAdeti = 2
                        },
                        new
                        {
                            UrunId = 1,
                            EnvanterId = 5,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 1,
                            EnvanterId = 6,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 2,
                            EnvanterId = 7,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 2,
                            EnvanterId = 8,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 2,
                            EnvanterId = 9,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 2,
                            EnvanterId = 10,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 3,
                            EnvanterId = 11,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 3,
                            EnvanterId = 12,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 3,
                            EnvanterId = 13,
                            EnvanterAdeti = 1
                        },
                        new
                        {
                            UrunId = 3,
                            EnvanterId = 14,
                            EnvanterAdeti = 2
                        },
                        new
                        {
                            UrunId = 3,
                            EnvanterId = 15,
                            EnvanterAdeti = 2
                        },
                        new
                        {
                            UrunId = 3,
                            EnvanterId = 16,
                            EnvanterAdeti = 100
                        });
                });

            modelBuilder.Entity("EYS.CoreBusiness.UrunIslem", b =>
                {
                    b.Property<int>("UrunIslemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunIslemId"));

                    b.Property<double?>("AdetFiyati")
                        .HasColumnType("float");

                    b.Property<int>("AksiyonTipi")
                        .HasColumnType("int");

                    b.Property<string>("AlanKisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IslemZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("OncekiAdet")
                        .HasColumnType("int");

                    b.Property<string>("SNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SonrakiAdet")
                        .HasColumnType("int");

                    b.Property<string>("UretimNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("UrunIslemId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunIslemleri");
                });

            modelBuilder.Entity("EYS.CoreBusiness.EnvanterIslem", b =>
                {
                    b.HasOne("EYS.CoreBusiness.Envanter", "Envanter")
                        .WithMany()
                        .HasForeignKey("EnvanterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Envanter");
                });

            modelBuilder.Entity("EYS.CoreBusiness.UrunEnvanter", b =>
                {
                    b.HasOne("EYS.CoreBusiness.Envanter", "Envanter")
                        .WithMany("UrunEnvanterleri")
                        .HasForeignKey("EnvanterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EYS.CoreBusiness.Urun", "Urun")
                        .WithMany("UrunEnvanterleri")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Envanter");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("EYS.CoreBusiness.UrunIslem", b =>
                {
                    b.HasOne("EYS.CoreBusiness.Urun", "urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("urun");
                });

            modelBuilder.Entity("EYS.CoreBusiness.Envanter", b =>
                {
                    b.Navigation("UrunEnvanterleri");
                });

            modelBuilder.Entity("EYS.CoreBusiness.Urun", b =>
                {
                    b.Navigation("UrunEnvanterleri");
                });
#pragma warning restore 612, 618
        }
    }
}
