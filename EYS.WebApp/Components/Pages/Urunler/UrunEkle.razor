@page "/urunekle"

@rendermode InteractiveServer

@inject IUrunEkleUseCase UrunEkleUseCase;
@inject NavigationManager NavigationManager

<h3>Urun Ekle</h3>

<br />

<EditForm Model="urun" OnValidSubmit="Kaydet">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Urun İsimi</label>
        <InputText id="isim"
            @bind-Value="urun.UrunIsim"
            class="form-control">
        </InputText>
        <ValidationMessage For="() => urun.UrunIsim"></ValidationMessage>
    </div>

    <div class="form-group">
        <label for="adet">Urun Adeti</label>
        <InputNumber id="adet"
                   @bind-Value="urun.Adet"
                   class="form-control">
        </InputNumber>
        <ValidationMessage For="() => urun.Adet"></ValidationMessage>
    </div>

    <div class="form-group">
        <label for="fiyat">Urun Fiyatı</label>
        <InputNumber id="fiyat"
                     @bind-Value="urun.Fiyat"
                     class="form-control">
        </InputNumber>
        <ValidationMessage For="() => urun.Fiyat"></ValidationMessage>
    </div>

    <div class="form-group">
        <label for="fiyat">Envanterler</label>
        <UrunEnvanterleriComponent Urun="this.urun"></UrunEnvanterleriComponent>
    </div>

    <br />

    <button type="submit" class="btn btn-primary">Kaydet</button>
    &nbsp;
    <a href="/urunler" class="btn btn-secondary">Geri Dön</a>

</EditForm>

@code {

    private Urun urun { get; set; } = new Urun();

    private async Task Kaydet()
    {
        await UrunEkleUseCase.ExecuteAsync(urun);

        NavigationManager.NavigateTo("/urunler");
    }

}
