@using static EYS.WebApp.Components.Controls.Common.OtomatikTamamlaComponent

@attribute [Authorize]

@page "/sat"

<h3>Ürün Sat</h3>

@rendermode InteractiveServer

@inject IJSRuntime JSRuntime

@inject IIsmeGoreUrunleriGoruntuleUseCase IsmeGoreUrunleriGoruntuleUseCase
@inject IIDyeGoreUrunGoruntuleUseCase IDyeGoreUrunGoruntuleUseCase
@inject IUrunSatUseCase UrunSatUseCase

<EditForm id = "satis-formu" Model="SatmaViewModel" OnValidSubmit="Sat">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="sa">Satış Numarası #</label>
        <InputText id="sa" class="form-control" @bind-Value="SatmaViewModel.SatisNumarasi"></InputText>
    </div>
    <br />
    <div class="card">
        <div class="card-body">
            <div class="form-group">
                <OtomatikTamamlaComponent Label="Satılacak Ürün"
                                          AramaFonksiyon="UrunArama"
                                          ItemSecildiginde="ItemSecmeYap">
                </OtomatikTamamlaComponent>

            </div>
        </div>
    </div>
    <br />
    <div class="form-group">
        <label for="adt">Adet</label>
        <InputNumber id="adt" class="form-control" @bind-Value="SatmaViewModel.SatilacakAdet"></InputNumber>
    </div>
    <br />

    <div class="form-group">
        <label for="fiyat">Adet Fiyatı</label>
        <InputNumber id="fiyat" class="form-control" @bind-Value="SatmaViewModel.AdetFiyati"></InputNumber>
    </div>
    <br />

    <button type="submit" class="btn btn-primary">Sat</button>
</EditForm>

@code {

    private SatmaViewModel SatmaViewModel = new SatmaViewModel();
    private Urun? seciliUrun;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            JSRuntime.InvokeVoidAsync("formGondermeyiOnle", "satis-formu");
        }
    }

    private async Task<List<ItemViewModel>?> UrunArama(string name)
    {
        var liste = await IsmeGoreUrunleriGoruntuleUseCase.ExecuteAsync(name);
        if (liste is null) return null;

        return liste.Select(x => new ItemViewModel { Id = x.UrunId, Name = x.UrunIsim })?.ToList();
    }

    private async Task ItemSecmeYap(ItemViewModel urn)
    {
        this.seciliUrun = await IDyeGoreUrunGoruntuleUseCase.ExecuteAsync(urn.Id);

        this.SatmaViewModel.UrunId = urn.Id;
        this.SatmaViewModel.Urun = this.seciliUrun;
        this.SatmaViewModel.AdetFiyati = seciliUrun.Fiyat;
    }

    private async Task Sat()
    {
        await UrunSatUseCase.ExecuteAsync(
            this.SatmaViewModel.SatisNumarasi,
            this.seciliUrun,
            this.SatmaViewModel.SatilacakAdet,
            this.SatmaViewModel.AdetFiyati,
            "Can");

        this.SatmaViewModel = new SatmaViewModel();
        this.seciliUrun = null;
    }
}
