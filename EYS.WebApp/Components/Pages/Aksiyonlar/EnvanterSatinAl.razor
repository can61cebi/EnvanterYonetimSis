@page "/satinal"
@using static EYS.WebApp.Components.Controls.Common.OtomatikTamamlaComponent

@rendermode InteractiveServer

@inject IJSRuntime JSRuntime

@inject IIsmeGoreEnvanterleriGoruntuleUseCase IsmeGoreEnvanterleriGoruntuleUseCase
@inject IIDyeGoreEnvanterGoruntuleUseCase IDyeGoreEnvanterGoruntuleUseCase
@inject IEnvanterSatinAlUseCase EnvanterSatinAlUseCase

<h3>Envanter Satın Al</h3>
<br />

<EditForm id="satinalma-formu" Model="SatinAlmaViewModel" OnValidSubmit="Satinal">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="sa">Satın Alım #</label>
        <InputText id="sa" class="form-control" @bind-Value="SatinAlmaViewModel.almaSayisi"></InputText>
    </div>
    <br />
    <div class="card">
        <div class="card-body">
            <div class="form-group">
                <OtomatikTamamlaComponent Label="Envanter"
                                          AramaFonksiyon="EnvanterArama"
                                          ItemSecildiginde="ItemSecmeYap">
                </OtomatikTamamlaComponent>

                @if (SatinAlmaViewModel.EnvaterFiyati > 0)
                {
                    <text>Fiyat:</text>
                    @SatinAlmaViewModel.EnvaterFiyati.ToString("c")
                }

            </div>
        </div>
    </div>
    <br />
    <div class="form-group">
        <label for="adt">Adet</label>
        <InputNumber id="adt" class="form-control" @bind-Value="SatinAlmaViewModel.SatinAlmaAdeti"></InputNumber>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Satın Al</button>
</EditForm>

@code {
    private SatinAlmaViewModel SatinAlmaViewModel = new SatinAlmaViewModel();

    private Envanter? seciliEnvanter = null;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            JSRuntime.InvokeVoidAsync("formGondermeyiOnle", "satinalma-formu");
        }
    }

    private async Task<List<ItemViewModel>?> EnvanterArama(string name)
    {
        var liste = await IsmeGoreEnvanterleriGoruntuleUseCase.ExecuteAsync(name);
        if (liste is null) return null;

        return liste.Select(x => new ItemViewModel { Id = x.EnvanterId, Name = x.EnvanterIsim})?.ToList();
    }

    private async Task ItemSecmeYap(ItemViewModel urn)
    {
        seciliEnvanter = await IDyeGoreEnvanterGoruntuleUseCase.ExecuteAsync(urn.Id);

        this.SatinAlmaViewModel.EnvanterId = urn.Id;
        this.SatinAlmaViewModel.EnvaterFiyati = seciliEnvanter.Fiyat;
    }

    private async Task Satinal()
    {
            await EnvanterSatinAlUseCase.ExecuteAsync(
                this.SatinAlmaViewModel.almaSayisi,
                seciliEnvanter,
                this.SatinAlmaViewModel.SatinAlmaAdeti,
                "Can"
                );
     
            this.SatinAlmaViewModel = new SatinAlmaViewModel();
            this.seciliEnvanter = null;
    }
}
