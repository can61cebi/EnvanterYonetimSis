@inject IIsmeGoreUrunleriGoruntuleUseCase IsmeGoreUrunleriGoruntuleUseCase

<table class="table">
    <thead>
        <tr>
            <th>İsim</th>
            <th>Adet</th>
            <th>Fiyat</th>
            <th></th>
            <th style="text-align:left"></th>
        </tr>
    </thead>
    <tbody>
        @if (urunler is not null && urunler.Count > 0)
        {
            foreach (var env in urunler)
            {
            <UrunListesiItemComponent @rendermode="InteractiveServer" Urun="env"></UrunListesiItemComponent>
            }
        }
    </tbody>
</table>

@code {
    private List<Urun> urunler;

    [Parameter]
    public string? UrunAramaFiltresi { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        urunler = (await IsmeGoreUrunleriGoruntuleUseCase.ExecuteAsync(UrunAramaFiltresi ?? string.Empty)).ToList();
    }
}