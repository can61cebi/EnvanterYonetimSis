@inject NavigationManager NavigationManager
@inject IEnvanterSilUseCase EnvanterSilUseCase

@if (this.Envanter is not null)
{
    <tr>
        <td>@Envanter.EnvanterIsim</td>
        <td>@Envanter.Adet</td>
        <td>@Envanter.Fiyat.ToString("c")</td>
        <td>
            <a class="btn btn-light"
                href="/envanterduzenle/@Envanter.EnvanterId">
                Düzenle
            </a>
        </td>
        <td>
        <EditForm Enhance="true" Model="Envanter"
            FormName="@($"form-sil-envanter-{Envanter.EnvanterId}")"
        OnValidSubmit="() => EnvanterSil(Envanter.EnvanterId)">
            <button type="submit" class="btn btn-danger">
                Delete
            </button>
        </EditForm>
        </td>
    </tr>
}

@code {
    [Parameter]
    public Envanter? Envanter { get; set; }

    private async Task EnvanterSil(int envanterId)
    {
        await EnvanterSilUseCase.ExecuteAsync(envanterId);
        NavigationManager.Refresh();
    }
}