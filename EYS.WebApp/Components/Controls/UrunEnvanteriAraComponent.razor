@inject IIsmeGoreEnvanterleriGoruntuleUseCase IsmeGoreEnvanterleriGoruntuleUseCase;

<div class="input-group">
    <input class="form-control"
               placeholder="Aramak için envanter ismi girin"
               @bind-value="this.aramaFiltresi" @bind-value:event="oninput">
    </input>
    <button type="button" class="btn-success input-group-text" @onclick="AramaYap">Ara</button>
</div>
@if (envanterler is not null && envanterler.Count > 0)
{
    <div class="arama-sonuc">
        <ul>
            @foreach (var env in envanterler)
            {
                <li
                @key="env.EnvanterId"
                    @onclick="() => { EnvanterSecmeYap(env); }">
                >
                    @env.EnvanterIsim
                </li>
            }
        </ul>
    </div>
}

@code {
    [Parameter]
    public EventCallback<Envanter> OnEnvanterSecildi { get; set; }

    private string _aramaFiltresi = string.Empty;
    private string aramaFiltresi
    {
        get => _aramaFiltresi;
        set
        {
            _aramaFiltresi = value;
            AramaYap();
        }
    }

    private List<Envanter> envanterler = new List<Envanter>();

    private async Task AramaYap()
    {
        await Task.Delay(500); // uzun database cekiyormus gibi simule ediyoruz
        envanterler = (await IsmeGoreEnvanterleriGoruntuleUseCase.ExecuteAsync(this.aramaFiltresi)).ToList();

        StateHasChanged();
    }

    private async Task EnvanterSecmeYap(Envanter envanter)
    {
        await OnEnvanterSecildi.InvokeAsync(envanter);
        envanterler.Clear();
    }
}
